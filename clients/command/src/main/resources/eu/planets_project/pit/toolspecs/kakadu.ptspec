<?xml version="1.0" encoding="UTF-8"?>
<toolspec>
  <id>pit-buildin-kakadu</id>
  <tool>Kakadu</tool>

  <!-- Information on how to install this tool. Should be actionable where possible, manual by default. -->
  <install type="manual"/>

  <!-- Specify environment variables required to run this tool. -->
  <env name="KAKADU_HOME" value="/home/anj/Applications/Kakadu6.3.1/Linux-x86-32"/>  
  <env name="LD_LIBRARY_PATH" value="$KAKADU_HOME"/>  

  <!-- You may also specify some information via commands - this executes the version command and matches the version as #.#.# -->
  <version>
    <command>$KAKADU_HOME/kdu_compress -v</command>
    <match>(\d\.\d\.\d)</match>
  </version>

  <!-- Now declare the command and any options required.
       Use %{in} or %{inFile} or %{inDir} for input specification
       Use %{out} or %{outFile} or %{outDir} for output specification -->

  <!-- Fully lossless compression, using default values for everything. -->
  <convert id="lossless">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate - Creversible=yes</command>
    <formats in="tif,bmp,pnm" out="jp2"/>
    <formats in="pnm" out="jp2"/>
  </convert>

  <!-- Minimally lossless means using the irreversible wavelet transform, but keeping everything else and using default values -->
  <convert id="minimally-lossless">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate - Creversible=no</command>
  </convert>

  <convert id="lossy-maxrate-4.0">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate 4.0,3.4,2.1,1.2,0.6,0.3,0.15,0.075 Creversible=no Clevels=6 Cmodes=BYPASS Corder=RPCL Cblk={64,64} Cprecincts={256,256},{256,256},{128,128} ORGgen_plt=yes ORGtparts=R</command>
  </convert>

  <convert id="lossy-maxrate-3.4">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate 3.4,2.1,1.2,0.6,0.3,0.15,0.075 Creversible=no Clevels=6 Cmodes=BYPASS Corder=RPCL Cblk={64,64} Cprecincts={256,256},{256,256},{128,128} ORGgen_plt=yes ORGtparts=R</command>
  </convert>

  <convert id="lossy-maxrate-2.8">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate 2.8,2.1,1.2,0.6,0.3,0.15,0.075 Creversible=no Clevels=6 Cmodes=BYPASS Corder=RPCL Cblk={64,64} Cprecincts={256,256},{256,256},{128,128} ORGgen_plt=yes ORGtparts=R</command>
  </convert>

  <convert id="lossy-maxrate-2.1">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate 2.1,1.2,0.6,0.3,0.15,0.075 Creversible=no Clevels=6 Cmodes=BYPASS Corder=RPCL Cblk={64,64} Cprecincts={256,256},{256,256},{128,128} ORGgen_plt=yes ORGtparts=R</command>
  </convert>

  <convert id="lossy-maxrate-1.5">
    <command>$KAKADU_HOME/kdu_compress -i %{inFile} -o %{outFile} -rate 1.5,1.2,0.6,0.3,0.15,0.075 Creversible=no Clevels=6 Cmodes=BYPASS Corder=RPCL Cblk={64,64} Cprecincts={256,256},{256,256},{128,128} ORGgen_plt=yes ORGtparts=R</command>
  </convert>

  <!-- 
  Simple JP2 validation by expanding the JP2 with Kakadu and checking it worked okay. The 'precise' flag forces the use of 32-bit representations. 
  -->
  <validate id="can-expand-precise-1thread">
    <command>$KAKADU_HOME/kdu_expand -i %{inFile} -o ${tmpFile}.pnm -stats -precise -num_threads 1</command>
    <invalidIfOutput match="Kakadu .* Error"/>
    <validIfOutput match="Processed using the multi-threaded environment, with"/>
  </validate>

</toolspec>
